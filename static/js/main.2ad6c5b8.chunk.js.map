{"version":3,"sources":["images/ken.jpg","images/ken-sad.png","images/ken-sunglasses.png","images/flag.png","images/mine.png","components/Board.tsx","constants.ts","actions/actions.tsx","actions/actionTypes.tsx","utilities/setMines.tsx","components/BoardSizeSelect.tsx","components/MinesCounter.tsx","utilities/getDisplayTime.tsx","components/Timer.tsx","components/Header.tsx","utilities/checkDisplayImage.tsx","utilities/checkDisplayMinesTouching.tsx","utilities/checkIfFlagged.tsx","utilities/checkIfMine.tsx","utilities/checkIfPlayed.tsx","utilities/getSquaresTouching.tsx","utilities/getMinesTouching.tsx","components/Square.tsx","components/App.tsx","serviceWorker.ts","utilities/setFlaggedSquares.tsx","reducers/index.tsx","sagas/clickSurroundingSquares.tsx","store/index.tsx","index.tsx"],"names":["module","exports","styled","div","smallBoard","boardSize","numSquares","numMines","colSize","rowSize","medBoard","largeBoard","actions","clickMine","index","type","payload","clickSquare","flagSquare","setMines","mines","setBoardSize","board","setInitialTime","initialTime","setTime","time","setGameInProgress","isGameInProgress","length","mine","Math","floor","random","includes","push","BoardSizeSelect","useSelector","useReduxSelector","dispatch","useDispatch","state","moves","flaggedSquares","losingSquare","isGameWon","filter","square","isGameLost","options","useRef","smallOption","mediumOption","largeOption","handleClickOption","value","current","find","boardType","undefined","classList","add","selectStyle","backgroundImage","kenHappy","kenSad","ken","border","className","style","onClick","contains","remove","ref","MinesCounter","minesFlagged","minesRemaining","getDisplayTime","hours","mins","secs","Timer","isGameOver","displayTime","callback","delay","savedCallback","useEffect","id","setInterval","clearInterval","useInterval","delta","Date","getTime","secondsElapsed","Header","checkDisplayImage","isPlayed","isMine","isFlagged","minesTouching","checkDisplayMinesTouching","checkIfFlagged","i","checkIfMine","checkIfPlayed","getSquaresTouching","inTopRow","inBottomRow","inLeftColumn","inRightColumn","aboveLeft","above","aboveRight","belowLeft","below","belowRight","left","right","getMinesTouching","squaresTouchingArray","Square","isLosingSquare","displayMinesTouching","displayImage","imageSrc","flag","onContextMenu","e","preventDefault","handleRightClick","src","App","squares","key","createSquares","Boolean","window","location","hostname","match","setFlaggedSquares","initialState","reducer","action","move","indexOf","sort","a","b","map","bool","clickSurroundingSquares","clickSurroundingSquaresSaga","select","squaresToReveal","squaresToRevealActions","put","all","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","configureStore","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ad6c5b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ken.9703d12e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ken-sad.47dc8488.png\";","module.exports = __webpack_public_path__ + \"static/media/ken-sunglasses.394aa9ea.png\";","module.exports = __webpack_public_path__ + \"static/media/flag.41007bff.png\";","module.exports = __webpack_public_path__ + \"static/media/mine.6a757fd3.png\";","import styled from 'styled-components';\nimport '../sass/styles.scss';\n\nconst Board = styled.div`\n    align-self: center;\n    display: grid;\n    grid-area: board;\n    grid-gap: 0;\n    grid-template-columns: 7vh 7vh 7vh 7vh 7vh 7vh 7vh 7vh;\n    grid-template-rows: 7vh 7vh 7vh 7vh 7vh 7vh 7vh 7vh;\n    height: 63vh;\n    justify-self: center;\n    margin: auto;\n    width: 63vh;\n`;\n\nexport default Board;\n","export const smallBoard = {\n    boardSize: 'small',\n    numSquares: 64,\n    numMines: 10,\n    colSize: 8,\n    rowSize: 8,\n};\n\nexport const medBoard = {\n    boardSize: 'medium',\n    numSquares: 144,\n    numMines: 24,\n    colSize: 12,\n    rowSize: 12,\n};\n\nexport const largeBoard = {\n    boardSize: 'large',\n    numSquares: 256,\n    numMines: 48,\n    colSize: 16,\n    rowSize: 16,\n};\n","import {\n\tCLICK_MINE,\n\tCLICK_SQUARE,\n\tFLAG_SQUARE,\n\tSET_BOARD_SIZE,\n\tSET_MINES,\n\tSET_INITIAL_TIME,\n\tSET_TIME,\n\tSET_GAME_IN_PROGRESS\n} from './actionTypes';\n\ntype Board = {\n\tboardSize: string;\n\tnumSquares: number;\n\tnumMines: number;\n\tcolSize: number;\n\trowSize: number;\n};\n\nconst clickMine = (index: number) => ({\n\ttype: CLICK_MINE,\n\tpayload: { index }\n});\n\nconst clickSquare = (index: number | number[]) => ({\n\ttype: CLICK_SQUARE,\n\tpayload: { index }\n});\n\nconst flagSquare = (index: number) => ({\n\ttype: FLAG_SQUARE,\n\tpayload: { index }\n});\n\nconst setMines = (mines: number[]) => ({\n\ttype: SET_MINES,\n\tpayload: { mines }\n});\n\nconst setBoardSize = (board: Board) => ({\n\ttype: SET_BOARD_SIZE,\n\tpayload: { board }\n});\n\nconst setInitialTime = (initialTime: number | undefined) => ({\n\ttype: SET_INITIAL_TIME,\n\tpayload: { initialTime }\n});\n\nconst setTime = (time: number) => ({\n\ttype: SET_TIME,\n\tpayload: { time }\n});\n\nconst setGameInProgress = (isGameInProgress: boolean) => ({\n\ttype: SET_GAME_IN_PROGRESS,\n\tpayload: { isGameInProgress }\n});\n\nconst actions = {\n\tclickMine,\n\tclickSquare,\n\tflagSquare,\n\tsetMines,\n\tsetBoardSize,\n\tsetInitialTime,\n\tsetTime,\n\tsetGameInProgress\n};\n\nexport default actions;\n","export const CLICK_MINE = 'CLICK_MINE';\nexport const CLICK_SQUARE = 'CLICK_SQUARE';\nexport const FLAG_SQUARE = 'FLAG_SQUARE';\nexport const SET_MINES = 'SET_MINES';\nexport const SET_BOARD_SIZE = 'SET_BOARD_SIZE';\nexport const SET_INITIAL_TIME = 'SET_INITIAL_TIME';\nexport const SET_TIME = 'SET_TIME';\nexport const SET_GAME_IN_PROGRESS = 'SET_GAME_IN_PROGRESS';\n","type Board = {\n    numSquares: number;\n    numMines: number;\n};\n\ntype Mines = number[];\n\nconst setMines = (board: Board) => {\n    let mines: Mines = [];\n    while (mines.length < board.numMines) {\n        let mine = Math.floor(Math.random() * board.numSquares);\n        if (!mines.includes(mine)) mines.push(mine);\n    }\n    return mines;\n};\n\nexport default setMines;\n","import React, { Fragment, useRef } from 'react';\nimport { useDispatch, useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux';\nimport { smallBoard, medBoard, largeBoard } from '../constants';\nimport { AppState } from '../reducers/index';\nimport actions from '../actions/actions';\nimport setMines from '../utilities/setMines';\nimport ken from '../images/ken.jpg';\nimport kenSad from '../images/ken-sad.png';\nimport kenHappy from '../images/ken-sunglasses.png';\nimport '../sass/styles.scss';\n\nconst BoardSizeSelect = () => {\n\tconst useSelector: TypedUseSelectorHook<AppState> = useReduxSelector;\n\tconst dispatch = useDispatch();\n\tconst state = useSelector((state) => state);\n\tconst { moves, flaggedSquares, board, losingSquare } = state;\n\tconst isGameWon = moves.length + flaggedSquares.filter((square) => square).length === board.numSquares;\n\tconst isGameLost = losingSquare !== null;\n\tconst options = useRef<HTMLDivElement | null>(null);\n\tconst smallOption = useRef<HTMLDivElement | null>(null);\n\tconst mediumOption = useRef<HTMLDivElement | null>(null);\n\tconst largeOption = useRef<HTMLDivElement | null>(null);\n\n\tconst handleClick = () => {\n\t\tif (options.current && smallOption.current && mediumOption.current && largeOption.current) {\n\t\t\tconst isOptionsHidden = options.current.classList.contains('u-hide');\n\n\t\t\tif (isOptionsHidden) {\n\t\t\t\toptions.current.classList.remove('u-hide');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleClickOption = (value: string) => {\n\t\tif (options.current) {\n\t\t\tconst boardSizes = [ smallBoard, medBoard, largeBoard ];\n\t\t\tconst board = boardSizes.find((boardType) => {\n\t\t\t\treturn boardType.boardSize === value;\n\t\t\t});\n\t\t\tif (board) {\n\t\t\t\tconst mines = setMines(board);\n\t\t\t\tdispatch(actions.setBoardSize(board));\n\t\t\t\tdispatch(actions.setMines(mines));\n\t\t\t\tdispatch(actions.setTime(0));\n\t\t\t\tdispatch(actions.setInitialTime(undefined));\n\t\t\t\tdispatch(actions.setGameInProgress(false));\n\t\t\t}\n\t\t\toptions.current.classList.add('u-hide');\n\t\t}\n\t};\n\n\tconst selectStyle = {\n\t\tbackgroundImage: `url(${isGameWon ? kenHappy : isGameLost ? kenSad : ken})`,\n\t\tborder: 'none'\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"header__select\">\n\t\t\t\t<div className=\"header__button\" style={selectStyle} onClick={handleClick} />\n\t\t\t\t<div className=\"header__options-outer\">\n\t\t\t\t\t<div className=\"header__options-inner u-hide\" ref={options}>\n\t\t\t\t\t\t<div className=\"header__option\" ref={smallOption} onClick={() => handleClickOption('small')}>\n\t\t\t\t\t\t\tSmall\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"header__option\" ref={mediumOption} onClick={() => handleClickOption('medium')}>\n\t\t\t\t\t\t\tMedium\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"header__option\" ref={largeOption} onClick={() => handleClickOption('large')}>\n\t\t\t\t\t\t\tLarge\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default BoardSizeSelect;\n","import React from 'react';\nimport { useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux';\nimport { AppState } from '../reducers/index';\nimport '../sass/styles.scss';\n\nconst MinesCounter = () => {\n\tconst useSelector: TypedUseSelectorHook<AppState> = useReduxSelector;\n\tconst state = useSelector((state) => state);\n\tconst mines = state ? state.mines : [];\n\tconst flaggedSquares = state ? state.flaggedSquares : [];\n\tconst minesFlagged = flaggedSquares && flaggedSquares.filter((square) => square);\n\tconst minesRemaining = mines && mines.length - minesFlagged.length;\n\n\treturn <div className=\"header__mines-counter\">{minesRemaining}</div>;\n};\n\nexport default MinesCounter;\n","const getDisplayTime = (hours: number, mins: number, secs: number) => {\n\tconst hoursDisplay = hours > 0 ? `${hours}:` : '';\n\tconst minsDisplay = hours > 0 ? (mins < 10 ? `0${mins}:` : `${mins}:`) : mins > 0 ? `${mins}:` : '';\n\tconst secsDisplay = mins > 0 && secs < 10 ? `0${secs}` : `${secs}`;\n\n\treturn hoursDisplay + minsDisplay + secsDisplay;\n};\n\nexport default getDisplayTime;\n","import React, { useRef, useEffect } from 'react';\nimport { useDispatch, useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux';\nimport { AppState } from '../reducers/index';\nimport actions from '../actions/actions';\nimport getDisplayTime from '../utilities/getDisplayTime';\nimport '../sass/styles.scss';\n\ntype Callback = () => void;\ntype Delay = number | null;\n\nconst Timer = () => {\n\tconst useSelector: TypedUseSelectorHook<AppState> = useReduxSelector;\n\tconst state = useSelector((state) => state);\n\tconst { initialTime, moves, flaggedSquares, board, losingSquare, time, isGameInProgress } = state;\n\tconst dispatch = useDispatch();\n\tconst isGameOver =\n\t\tmoves.length + flaggedSquares.filter((square) => square).length === board.numSquares || losingSquare !== null;\n\tconst hours = time ? Math.floor(time / 3600) : 0;\n\tconst mins = time ? Math.floor((time % 3600) / 60) : 0;\n\tconst secs = time ? Math.floor(time % 60) : 0;\n\tconst displayTime = getDisplayTime(hours, mins, secs);\n\n\tconst useInterval = (callback: Callback, delay: Delay) => {\n\t\tconst savedCallback = useRef(callback);\n\n\t\tuseEffect(\n\t\t\t() => {\n\t\t\t\tsavedCallback.current = callback;\n\t\t\t},\n\t\t\t[ callback ]\n\t\t);\n\n\t\tuseEffect(\n\t\t\t() => {\n\t\t\t\tconst tick = () => {\n\t\t\t\t\tsavedCallback.current();\n\t\t\t\t};\n\t\t\t\tif (delay !== null) {\n\t\t\t\t\tlet id = setInterval(tick, delay);\n\t\t\t\t\treturn () => clearInterval(id);\n\t\t\t\t}\n\t\t\t},\n\t\t\t[ delay ]\n\t\t);\n\t};\n\n\tconst timer = () => {\n\t\tif (initialTime) {\n\t\t\tconst newTime = new Date().getTime();\n\t\t\tconst delta = newTime - initialTime;\n\t\t\tconst secondsElapsed = Math.floor(delta / 1000);\n\t\t\tdispatch(actions.setTime(secondsElapsed));\n\t\t}\n\t};\n\n\tuseInterval(timer, isGameOver || !isGameInProgress ? null : 100);\n\n\treturn <div className=\"header__timer\">{displayTime}</div>;\n};\n\nexport default Timer;\n","import React from 'react';\nimport { useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux';\nimport { AppState } from '../reducers/index';\nimport { smallBoard } from '../constants';\nimport BoardSizeSelect from './BoardSizeSelect';\nimport MinesCounter from './MinesCounter';\nimport Timer from './Timer';\nimport '../sass/styles.scss';\n\nconst Header = () => {\n\tconst useSelector: TypedUseSelectorHook<AppState> = useReduxSelector;\n\tconst state = useSelector((state) => state);\n\tconst board = state ? state.board : smallBoard;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`header ${board.boardSize === 'small'\n\t\t\t\t? 'header--small'\n\t\t\t\t: board.boardSize === 'medium' ? 'header--medium' : 'header--large'}`}\n\t\t>\n\t\t\t<MinesCounter />\n\t\t\t<BoardSizeSelect />\n\t\t\t<Timer />\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","const checkDisplayImage = (\n    isPlayed: boolean | undefined,\n    isMine: boolean | undefined,\n    isFlagged: boolean | undefined,\n    minesTouching: number | undefined,\n    losingSquare: number | null | '' | undefined\n) => {\n    return (\n        (isPlayed && minesTouching === 0) ||\n        (losingSquare && isMine) ||\n        isFlagged\n    );\n};\n\nexport default checkDisplayImage;\n","const checkDisplayMinesTouching = (\n    isPlayed: boolean | undefined,\n    isMine: boolean | undefined,\n    isFlagged: boolean | undefined,\n    minesTouching: number | undefined\n) => {\n    return (\n        isPlayed && !isMine && !isFlagged && minesTouching && minesTouching > 0\n    );\n};\n\nexport default checkDisplayMinesTouching;\n","const checkIfFlagged = (index: number, flaggedSquares: boolean[]) => {\n    if (flaggedSquares) {\n        return flaggedSquares.find((square, i) => i === index);\n    }\n};\n\nexport default checkIfFlagged;\n","const checkIfMine = (index: number, mines: number[] | undefined) => {\n    if (mines) {\n        return mines.includes(index);\n    }\n};\n\nexport default checkIfMine;\n","const checkIfPlayed = (index: number, moves: (number | undefined)[]) => {\n    if (moves) {\n        return moves.includes(index);\n    }\n};\n\nexport default checkIfPlayed;\n","const getSquaresTouching = (index: number | undefined, boardSize: string) => {\n    if (index !== undefined) {\n        const left = index - 1;\n        const right = index + 1;\n        let inTopRow;\n        let inBottomRow;\n        let inLeftColumn;\n        let inRightColumn;\n        let aboveLeft;\n        let above;\n        let aboveRight;\n        let belowLeft;\n        let below;\n        let belowRight;\n        let squaresTouchingArray;\n\n        if (boardSize === 'small') {\n            inTopRow = index < 8;\n            inBottomRow = index > 56;\n            inLeftColumn = index % 8 === 0;\n            inRightColumn = (index + 1) % 8 === 0;\n            aboveLeft = index - 9;\n            above = index - 8;\n            aboveRight = index - 7;\n            belowLeft = index + 7;\n            below = index + 8;\n            belowRight = index + 9;\n        } else if (boardSize === 'medium') {\n            inTopRow = index < 12;\n            inBottomRow = index > 132;\n            inLeftColumn = index % 12 === 0;\n            inRightColumn = (index + 1) % 12 === 0;\n            aboveLeft = index - 13;\n            above = index - 12;\n            aboveRight = index - 11;\n            belowLeft = index + 11;\n            below = index + 12;\n            belowRight = index + 13;\n        } else if (boardSize === 'large') {\n            inTopRow = index < 16;\n            inBottomRow = index > 240;\n            inLeftColumn = index % 16 === 0;\n            inRightColumn = (index + 1) % 16 === 0;\n            aboveLeft = index - 17;\n            above = index - 16;\n            aboveRight = index - 15;\n            belowLeft = index + 15;\n            below = index + 16;\n            belowRight = index + 17;\n        }\n\n        if (inTopRow) {\n            if (inLeftColumn) {\n                squaresTouchingArray = [right, below, belowRight];\n            } else if (inRightColumn) {\n                squaresTouchingArray = [left, belowLeft, below];\n            } else {\n                squaresTouchingArray = [\n                    left,\n                    right,\n                    belowLeft,\n                    below,\n                    belowRight,\n                ];\n            }\n        } else if (inBottomRow) {\n            if (inLeftColumn) {\n                squaresTouchingArray = [above, aboveRight, right];\n            } else if (inRightColumn) {\n                squaresTouchingArray = [aboveLeft, above, left];\n            } else {\n                squaresTouchingArray = [\n                    aboveLeft,\n                    above,\n                    aboveRight,\n                    left,\n                    right,\n                ];\n            }\n        } else if (inLeftColumn) {\n            squaresTouchingArray = [\n                above,\n                aboveRight,\n                right,\n                below,\n                belowRight,\n            ];\n        } else if (inRightColumn) {\n            squaresTouchingArray = [aboveLeft, above, left, belowLeft, below];\n        } else {\n            squaresTouchingArray = [\n                aboveLeft,\n                above,\n                aboveRight,\n                left,\n                right,\n                belowLeft,\n                below,\n                belowRight,\n            ];\n        }\n        return squaresTouchingArray;\n    }\n};\n\nexport default getSquaresTouching;\n","import getSquaresTouching from './getSquaresTouching';\n\nconst getMinesTouching = (\n    index: number | undefined,\n    mines: number[] | undefined,\n    boardSize: string\n) => {\n    const squaresTouchingArray = getSquaresTouching(index, boardSize);\n    if (mines && squaresTouchingArray) {\n        const minesTouchingArray = squaresTouchingArray.filter(\n            square => square !== undefined && mines.includes(square)\n        );\n        return minesTouchingArray.length;\n    }\n};\n\nexport default getMinesTouching;\n","import React, { MouseEvent } from 'react';\nimport '../sass/styles.scss';\nimport { useDispatch, useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux';\nimport { AppState } from '../reducers/index';\nimport checkDisplayImage from '../utilities/checkDisplayImage';\nimport checkDisplayMinesTouching from '../utilities/checkDisplayMinesTouching';\nimport checkIfFlagged from '../utilities/checkIfFlagged';\nimport checkIfMine from '../utilities/checkIfMine';\nimport checkIfPlayed from '../utilities/checkIfPlayed';\nimport getMinesTouching from '../utilities/getMinesTouching';\nimport setFlaggedSquares from '../utilities/setFlaggedSquares';\nimport actions from '../actions/actions';\n\nimport flag from '../images/flag.png';\nimport ken from '../images/ken.jpg';\nimport kenSad from '../images/ken-sad.png';\nimport kenHappy from '../images/ken-sunglasses.png';\nimport mine from '../images/mine.png';\nimport getSquaresTouching from '../utilities/getSquaresTouching';\n\ntype SquareProps = {\n\tindex: number;\n\tboardSize: string;\n};\n\nconst Square = ({ index, boardSize }: SquareProps) => {\n\tconst useSelector: TypedUseSelectorHook<AppState> = useReduxSelector;\n\tconst dispatch = useDispatch();\n\tconst state = useSelector((state) => state);\n\tconst { mines, moves, flaggedSquares, board, losingSquare } = state;\n\tconst isMine = checkIfMine(index, mines);\n\tconst isLosingSquare = losingSquare === index;\n\tconst isFlagged = checkIfFlagged(index, flaggedSquares);\n\tconst isPlayed = checkIfPlayed(index, moves);\n\tconst minesTouching = getMinesTouching(index, mines, boardSize);\n\tconst displayMinesTouching = checkDisplayMinesTouching(isPlayed, isMine, isFlagged, minesTouching);\n\tconst displayImage = checkDisplayImage(isPlayed, isMine, isFlagged, minesTouching, losingSquare);\n\tconst isGameWon = moves.length + flaggedSquares.filter((square) => square).length === board.numSquares;\n\tconst isGameLost = losingSquare !== null;\n\tconst imageSrc = isFlagged\n\t\t? flag\n\t\t: isMine\n\t\t\t? mine\n\t\t\t: minesTouching === 0 && isGameWon ? kenHappy : minesTouching === 0 && isGameLost ? kenSad : ken;\n\n\tconst handleRightClick = (e: MouseEvent) => {\n\t\te.preventDefault();\n\t\tif (!isPlayed) {\n\t\t\tdispatch(actions.flagSquare(index));\n\t\t}\n\t};\n\n\tconst handleClick = () => {\n\t\tif (isGameWon || isGameLost || isFlagged) return;\n\t\tdispatch(isMine ? actions.clickMine(index) : actions.clickSquare(index));\n\t\tconst initialTime = new Date().getTime();\n\t\tdispatch(actions.setInitialTime(initialTime));\n\t\tdispatch(actions.setGameInProgress(true));\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tonClick={handleClick}\n\t\t\tonContextMenu={(e: MouseEvent) => handleRightClick(e)}\n\t\t\tclassName={`square \n                ${isLosingSquare\n\t\t\t\t\t? 'square--losing'\n\t\t\t\t\t: minesTouching === 1\n\t\t\t\t\t\t? 'u-color-magenta'\n\t\t\t\t\t\t: minesTouching === 2\n\t\t\t\t\t\t\t? 'u-color-purple'\n\t\t\t\t\t\t\t: minesTouching === 3\n\t\t\t\t\t\t\t\t? 'u-color-blue-dark'\n\t\t\t\t\t\t\t\t: minesTouching === 4\n\t\t\t\t\t\t\t\t\t? 'u-color-green'\n\t\t\t\t\t\t\t\t\t: minesTouching === 5\n\t\t\t\t\t\t\t\t\t\t? 'u-color-teal-dark'\n\t\t\t\t\t\t\t\t\t\t: minesTouching === 6\n\t\t\t\t\t\t\t\t\t\t\t? 'u-color-teal-light'\n\t\t\t\t\t\t\t\t\t\t\t: minesTouching === 7\n\t\t\t\t\t\t\t\t\t\t\t\t? 'u-color-pink-hot'\n\t\t\t\t\t\t\t\t\t\t\t\t: minesTouching === 8 ? 'u-color-blue-light' : ''}`}\n\t\t>\n\t\t\t{displayMinesTouching ? minesTouching : displayImage ? <img src={imageSrc} className=\"image--small\" /> : ''}\n\t\t</div>\n\t);\n};\n\nexport default Square;\n","import React, { useEffect } from 'react';\nimport '../sass/styles.scss';\nimport { useDispatch, useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux';\nimport { AppState } from '../reducers/index';\nimport Board from './Board';\nimport BoardSizeSelect from './BoardSizeSelect';\nimport Header from './Header';\nimport Square from './Square';\n\nimport setMines from '../utilities/setMines';\nimport actions from '../actions/actions';\n\ntype Board = {\n\tboardSize: string;\n\tnumSquares: number;\n\tnumMines: number;\n\tcolSize: number;\n\trowSize: number;\n};\n\nconst createSquares = (board: Board) => {\n\tlet squares = [];\n\tfor (let i = 0; i < board.numSquares; i++) {\n\t\tsquares.push(<Square key={i} index={i} boardSize={board.boardSize} />);\n\t}\n\treturn squares;\n};\n\nconst App: React.FC = () => {\n\tconst dispatch = useDispatch();\n\tconst useSelector: TypedUseSelectorHook<AppState> = useReduxSelector;\n\tconst state = useSelector((state) => state);\n\tconst mines = setMines(state.board);\n\tconst { board, flaggedSquares, losingSquare, moves } = state;\n\tconst { boardSize } = board;\n\n\tuseEffect(\n\t\t() => {\n\t\t\tdispatch(actions.setMines(mines));\n\t\t\tdispatch(actions.setBoardSize(board));\n\t\t},\n\t\t[ board ]\n\t);\n\n\treturn (\n\t\t<div className=\"margins\">\n\t\t\t<Header />\n\t\t\t<div\n\t\t\t\tclassName={`grid ${boardSize === 'small'\n\t\t\t\t\t? 'grid--small'\n\t\t\t\t\t: boardSize === 'medium' ? 'grid--medium' : 'grid--large'}`}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`board ${boardSize === 'small'\n\t\t\t\t\t\t? 'board--small'\n\t\t\t\t\t\t: boardSize === 'medium' ? 'board--medium' : 'board--large'}`}\n\t\t\t\t>\n\t\t\t\t\t{createSquares(board)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","const setFlaggedSquares = (numSquares: number) => {\n    let squares = [];\n    for (let i = 0; i < numSquares; i++) {\n        squares.push(false);\n    }\n    return squares;\n};\n\nexport default setFlaggedSquares;\n","import {\n\tCLICK_MINE,\n\tCLICK_SQUARE,\n\tFLAG_SQUARE,\n\tSET_MINES,\n\tSET_BOARD_SIZE,\n\tSET_INITIAL_TIME,\n\tSET_TIME,\n\tSET_GAME_IN_PROGRESS\n} from '../actions/actionTypes';\nimport setFlaggedSquares from '../utilities/setFlaggedSquares';\nimport { smallBoard } from '../constants';\n\nexport type Action = {\n\ttype: string;\n\tpayload: {\n\t\tindex?: number | undefined;\n\t\tmines?: number[];\n\t\tboard: {\n\t\t\tboardSize: string;\n\t\t\tnumSquares: number;\n\t\t\tnumMines: number;\n\t\t\tcolSize: number;\n\t\t\trowSize: number;\n\t\t};\n\t\tinitialTime?: number | undefined;\n\t\ttime?: number;\n\t\tisGameInProgress: boolean;\n\t};\n};\n\nconst initialState = {\n\tlosingSquare: null,\n\tmines: [],\n\tmoves: [],\n\tflaggedSquares: setFlaggedSquares(64),\n\tboard: smallBoard,\n\tinitialTime: undefined,\n\ttime: 0,\n\tisGameInProgress: false\n};\n\nexport const reducer = (state = initialState, action: Action) => {\n\tswitch (action.type) {\n\t\tcase CLICK_MINE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlosingSquare: action.payload.index,\n\t\t\t\tmoves: [\n\t\t\t\t\t...state.moves.filter((move, i) => state.moves.indexOf(move) === i),\n\t\t\t\t\taction.payload.index\n\t\t\t\t].sort((a, b) => {\n\t\t\t\t\tif (a && b) return a - b;\n\t\t\t\t\telse return 0;\n\t\t\t\t})\n\t\t\t};\n\t\t}\n\t\tcase CLICK_SQUARE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmoves: [\n\t\t\t\t\t...state.moves.filter((move, i) => state.moves.indexOf(move) === i),\n\t\t\t\t\taction.payload.index\n\t\t\t\t].sort((a, b) => {\n\t\t\t\t\tif (a && b) return a - b;\n\t\t\t\t\telse return 0;\n\t\t\t\t})\n\t\t\t};\n\t\t}\n\t\tcase FLAG_SQUARE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tflaggedSquares: state.flaggedSquares.map((bool, i) => {\n\t\t\t\t\treturn i === action.payload.index ? !bool : bool;\n\t\t\t\t})\n\t\t\t};\n\t\t}\n\t\tcase SET_MINES: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmines: action.payload.mines\n\t\t\t};\n\t\t}\n\t\tcase SET_BOARD_SIZE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlosingSquare: null,\n\t\t\t\tmoves: [],\n\t\t\t\tboard: action.payload.board,\n\t\t\t\tflaggedSquares: action.payload.board.numSquares\n\t\t\t\t\t? setFlaggedSquares(action.payload.board.numSquares)\n\t\t\t\t\t: state.flaggedSquares,\n\t\t\t\ttime: 0\n\t\t\t};\n\t\t}\n\t\tcase SET_INITIAL_TIME: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinitialTime:\n\t\t\t\t\taction.payload.initialTime === undefined\n\t\t\t\t\t\t? action.payload.initialTime\n\t\t\t\t\t\t: state.initialTime ? state.initialTime : action.payload.initialTime\n\t\t\t};\n\t\t}\n\t\tcase SET_TIME: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttime: action.payload.time\n\t\t\t};\n\t\t}\n\t\tcase SET_GAME_IN_PROGRESS: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisGameInProgress: action.payload.isGameInProgress\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn {\n\t\t\t\t...state\n\t\t\t};\n\t\t}\n\t}\n};\n\nexport type AppState = ReturnType<typeof reducer>;\n","import { all, put, select, takeEvery } from 'redux-saga/effects';\nimport actions from '../actions/actions';\nimport checkIfPlayed from '../utilities/checkIfPlayed';\nimport getMinesTouching from '../utilities/getMinesTouching';\nimport getSquaresTouching from '../utilities/getSquaresTouching';\n\ntype Action = {\n\ttype: string;\n\tpayload: {\n\t\tindex?: number;\n\t\tmines?: number[];\n\t};\n};\n\nfunction* clickSurroundingSquares(action: Action) {\n\tconst { mines, moves, board } = yield select();\n\tconst index = action.payload.index;\n\tconst { boardSize } = board;\n\tconst minesTouching = getMinesTouching(index, mines, boardSize);\n\tconst squaresTouchingArray = getSquaresTouching(index, boardSize);\n\n\tif (minesTouching && minesTouching > 0) return;\n\n\tif (squaresTouchingArray) {\n\t\tconst squaresToReveal = squaresTouchingArray.filter((square) => {\n\t\t\tif (square !== undefined && square < board.numSquares) {\n\t\t\t\treturn !checkIfPlayed(square, moves);\n\t\t\t}\n\t\t});\n\n\t\tconst squaresToRevealActions = squaresToReveal.map((square) => {\n\t\t\tif (square !== undefined) {\n\t\t\t\treturn put(actions.clickSquare(square));\n\t\t\t}\n\t\t});\n\n\t\tyield all(squaresToRevealActions);\n\t}\n}\n\nexport default function* clickSurroundingSquaresSaga() {\n\tyield takeEvery('CLICK_SQUARE', clickSurroundingSquares);\n}\n","import { applyMiddleware, createStore, Reducer } from 'redux';\nimport { reducer } from '../reducers/index';\nimport createSagaMiddleware from 'redux-saga';\nimport clickSurroundingSquaresSaga from '../sagas/clickSurroundingSquares';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = () => {\n    const store = createStore(\n        reducer as Reducer,\n        applyMiddleware(sagaMiddleware)\n    );\n\n    sagaMiddleware.run(clickSurroundingSquaresSaga);\n\n    return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/index';\n\nconst store = configureStore();\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}